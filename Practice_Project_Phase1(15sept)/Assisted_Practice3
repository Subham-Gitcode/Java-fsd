class BankAccount {
    private int balance = 1000; // Initial balance

    // Synchronized method for making a deposit
    synchronized void deposit(int amount) {
        balance += amount;
        System.out.println("Deposited $" + amount + ". New balance: $" + balance);
    }

    // Synchronized method for making a withdrawal
    synchronized void withdraw(int amount) {
        if (balance >= amount) {
            balance -= amount;
            System.out.println("Withdrawn $" + amount + ". New balance: $" + balance);
        } else {
            System.out.println("Insufficient balance for withdrawal.");
        }
    }
}

public class SynchronizationExample {
    public static void main(String[] args) {
        BankAccount account = new BankAccount();

        // Create two threads for deposit and withdrawal
        Thread depositThread = new Thread(() -> {
            for (int i = 0; i < 5; i++) {
                account.deposit(100);
            }
        });

        Thread withdrawThread = new Thread(() -> {
            for (int i = 0; i < 5; i++) {
                account.withdraw(200);
            }
        });

        // Start both threads
        depositThread.start();
        withdrawThread.start();
    }
}
