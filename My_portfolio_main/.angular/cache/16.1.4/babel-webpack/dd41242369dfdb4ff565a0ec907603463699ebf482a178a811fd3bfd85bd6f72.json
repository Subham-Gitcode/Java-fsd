{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction SigninComponent_div_0_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Valid email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SigninComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SigninComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2, \"Sign In\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n    i0.ɵɵtext(6, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 5);\n    i0.ɵɵtemplate(8, SigninComponent_div_0_div_8_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n    i0.ɵɵtext(11, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 8);\n    i0.ɵɵtemplate(13, SigninComponent_div_0_div_13_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 9);\n    i0.ɵɵtext(15, \"SIGN IN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"button\", 10)(18, \"a\", 11);\n    i0.ɵɵtext(19, \"SIGN UP\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.signinForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.signinForm.controls[\"email\"].invalid && ctx_r0.signinForm.controls[\"email\"].touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.signinForm.controls[\"password\"].invalid && ctx_r0.signinForm.controls[\"password\"].touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.signinForm.invalid);\n  }\n}\nexport class SigninComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.signinForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.signinForm.invalid) {\n      return;\n    }\n    // Get the form values\n    const {\n      email,\n      password\n    } = this.signinForm.value;\n    // Retrieve the stored sign-up data from local storage\n    const storedSignupData = localStorage.getItem('signupData');\n    if (storedSignupData) {\n      this.signupData = JSON.parse(storedSignupData);\n      // Check if the entered email and password match the stored sign-up data\n      if (email === this.signupData.email && password === this.signupData.password) {\n        // Reset the form\n        this.signinForm.reset();\n        // Set the authentication status to true\n        this.isAuthenticated = true;\n        // Navigate to the desired route within the application\n        this.router.navigate(['/navbar']); // or any other desired route\n      } else {\n        // Invalid credentials\n        alert('Invalid credentials!');\n      }\n    } else {\n      // No sign-up data found\n      alert('No sign-up data found');\n    }\n  }\n}\nSigninComponent.ɵfac = function SigninComponent_Factory(t) {\n  return new (t || SigninComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nSigninComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SigninComponent,\n  selectors: [[\"app-signin\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"signin-container\", 4, \"ngIf\"], [1, \"signin-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/signup\", 1, \"nav-link\", 2, \"text-decoration\", \"none\", \"color\", \"white\"], [1, \"text-danger\"]],\n  template: function SigninComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, SigninComponent_div_0_Template, 20, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.signinForm);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".signin-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  background: url('about-bg.jpg') no-repeat center center fixed;\\n  background-size: cover;\\n}\\n\\n.signin-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n}\\n\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%], input[type=\\\"password\\\"][_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  border: none;\\n  border-radius: 5px;\\n  background-color: rgba(255, 255, 255, 0.7);\\n  color: #333333;\\n}\\n\\ninput[type=\\\"email\\\"][_ngcontent-%COMP%]:focus, input[type=\\\"password\\\"][_ngcontent-%COMP%]:focus {\\n  background-color: #ffffff;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: #ff0000;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #007bff;\\n  color: #ffffff;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:disabled {\\n  background-color: #999999;\\n  cursor: not-allowed;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbmluL3NpZ25pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxhQUFhO0VBQ2IsNkRBQXNFO0VBQ3RFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsMENBQTBDO0VBQzFDLGNBQWM7QUFDaEI7O0FBRUE7O0VBRUUseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5zaWduaW4tY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQ6IHVybCgnLi4vYWJvdXQvYWJvdXQtYmcuanBnJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXIgZml4ZWQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG5cbi5zaWduaW4tY29udGFpbmVyIGgyIHtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG5sYWJlbCB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0ge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcbiAgY29sb3I6ICMzMzMzMzM7XG59XG5cbmlucHV0W3R5cGU9XCJlbWFpbFwiXTpmb2N1cyxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5cbi50ZXh0LWRhbmdlciB7XG4gIGNvbG9yOiAjZmYwMDAwO1xufVxuXG4uYnRuLXByaW1hcnkge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYnRuLXByaW1hcnk6ZGlzYWJsZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OTk5O1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuXG4uYnRuLXByaW1hcnk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SigninComponent_div_0_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵtemplate","SigninComponent_div_0_div_8_Template","SigninComponent_div_0_div_13_Template","ɵɵadvance","ɵɵproperty","ctx_r0","signinForm","controls","invalid","touched","SigninComponent","constructor","formBuilder","router","isAuthenticated","ngOnInit","group","email","required","password","value","storedSignupData","localStorage","getItem","signupData","JSON","parse","reset","navigate","alert","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","selectors","decls","vars","consts","template","SigninComponent_Template","rf","ctx","SigninComponent_div_0_Template"],"sources":["C:\\Users\\USER\\Java-fsd\\My_portfolio_main\\src\\app\\signin\\signin.component.ts","C:\\Users\\USER\\Java-fsd\\My_portfolio_main\\src\\app\\signin\\signin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  signinForm!: FormGroup;\n  signupData: any;\n  isAuthenticated = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.signinForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signinForm.invalid) {\n      return;\n    }\n\n    // Get the form values\n    const { email, password } = this.signinForm.value;\n\n    // Retrieve the stored sign-up data from local storage\n    const storedSignupData = localStorage.getItem('signupData');\n\n    if (storedSignupData) {\n      this.signupData = JSON.parse(storedSignupData);\n\n      // Check if the entered email and password match the stored sign-up data\n      if (email === this.signupData.email && password === this.signupData.password) {\n\n        // Reset the form\n        this.signinForm.reset();\n\n        // Set the authentication status to true\n        this.isAuthenticated = true;\n\n        // Navigate to the desired route within the application\n        this.router.navigate(['/navbar']); // or any other desired route\n      } else {\n        // Invalid credentials\n        alert('Invalid credentials!');\n      }\n    } else {\n      // No sign-up data found\n      alert('No sign-up data found');\n    }\n  }\n}\n","<div class=\"signin-container\" *ngIf=\"signinForm\">\n  <h2>Sign In</h2>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"signinForm\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" formControlName=\"email\" id=\"email\" class=\"form-control\" required>\n      <div *ngIf=\"signinForm.controls['email'].invalid && signinForm.controls['email'].touched\" class=\"text-danger\">\n        Valid email is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" formControlName=\"password\" id=\"password\" class=\"form-control\" required>\n      <div *ngIf=\"signinForm.controls['password'].invalid && signinForm.controls['password'].touched\" class=\"text-danger\">\n        Password is required.\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"signinForm.invalid\" class=\"btn btn-primary\">SIGN IN</button><br>\n    <button\n      type=\"submit\"\n      class=\"btn btn-primary\"\n    >\n      <a\n        class=\"nav-link\"\n        routerLink=\"/signup\"\n        style=\"text-decoration: none; color: white\"\n        >SIGN UP</a\n      >\n    </button>\n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}